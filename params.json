{"google":"","name":"Backbone.service","tagline":"Backbone service for non restful or semi restful apis","body":"Backbone.Service\r\n================\r\n\r\nBackbone.Service aims to help with the cases when restul API is not an option.\r\n\r\n## Install\r\n\r\n````javascript\r\n<script src=\"backbone.service.js\"></script>\r\n````\r\n\r\n## Usage\r\n\r\nYou can use backbone.service as a standalone object or extend backbone model or collection.\r\n\r\n````javascript\r\n\r\n// define server targets / endpoints\r\nvar targets = {\r\n  login: [\"/login\", \"post\"],\r\n  signup: [\"/signup\", \"post\"],\r\n  logout: [\"/logout\", \"get\"],\r\n  search: \"/search\" // defaults to get\r\n  resetPassword: [\"/resetpassword\", \"post\"],\r\n  updateSettings: [\"/updateSettings\", \"post\"]\r\n};\r\n\r\n// standalone service\r\nvar service = new Backbone.Service({ url: \"http://localhost:5000\", targets: targets });\r\n\r\n// extend backbone model\r\nvar User = Backbone.Model.extend(service);\r\n\r\n````\r\n\r\nEach target passed to Backbone.Service becomes a method on the model or collection.\r\n\r\nUser model has now access to new methods: `login`, `signup`, `logout`, `search`, `resetPassword`, `updateSettings`.\r\nEach new method takes two arguments: `data` and `options`.\r\n\r\nYou can use it like this:\r\n\r\n````javascript\r\n\r\nvar user = new User();\r\nuser.login({ username: 'bob', password: 'secret' });\r\n\r\n````\r\n\r\n## Promises / Callbacks\r\n\r\nBackbone.service comes with a simple implementation of promises. You can use them like this:\r\n\r\n````javascript\r\n\r\nuser.updateSettings(settings).then(function (res) {\r\n  // do something after successful update\r\n}, function (err, res) {\r\n  // do something in case of an error\r\n});\r\n\r\n\r\n````\r\n\r\nCallbacks are still supported. You can pass them as a second argument in your calls:\r\n\r\n````javascript\r\nuser.updateSettings(settings, {\r\n  success: function (res) {\r\n    // do something after successful update\r\n  },\r\n  error: function (err, res) {\r\n    // do something in case of an error\r\n  }\r\n});\r\n\r\n````\r\n\r\n##License:\r\n<pre>\r\n(The MIT License)\r\n\r\nCopyright (c) 2012 Michal Kuklis\r\n\r\n</pre>\r\n","note":"Don't delete this file! It's used internally to help with page regeneration."}